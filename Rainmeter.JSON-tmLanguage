// [PackageDev] target_format: plist, ext: tmLanguage
{
    "name": "Rainmeter",
    "scopeName": "source.rainmeter",
    "fileTypes": [
        "ini",
        "inc"
    ],
    "foldingStartMarker": "^\\s*\\[\\s*[^\\[\\]\\s]*\\s*\\]\\s*$",
    "foldingStopMarker": "^(?=\\s*\\[)",
    "patterns": [
        {
            "name": "meta.comment",
            "comment": "Comment lines",
            "match": "^\\s*(;.*)$",
            "captures": {
                "1": {"name": "comment.line.character.rainmeter"}
            }
        },
        {
            "name": "meta.variables.section.rainmeter",
            "comment": "All other options in a section",
            "begin": "(?i)^\\s*(\\[\\s*variables\\s*\\])\\s*$",
            "beginCaptures": {
                "1": {"name": "entity.name.section.rainmeter"}
            },
            "end": "^(?=\\s*\\[)",
            "patterns": [
                {
                    "name": "comment.line.character.rainmeter",
                    "comment": "Comment lines",
                    "match": "^\\s*;.*$"
                },
                {
                    "name": "meta.option.rainmeter",
                    "comment": "All other options in a section",
                    "match": "(?i)^\\s*(?!@include([^=])*)([^\\s=]+)\\s*(=)",
                    "captures": {
                        "2": {"name": "storage.type.variable.rainmeter"},
                        "3": {"name": "keyword.operator.option.equal.rainmeter"}
                    }
                },
                {
                    "include": "$self"
                }
            ]
        },
        {
            "name": "entity.name.section.rainmeter",
            "comment": "Section heads",
            "match": "^\\s*\\[\\s*[^\\[\\]\\s]*\\s*\\]\\s*$"
        },
        {
            "name": "meta.format.string.rainmeter",
            "comment": "Format option lines give formatting literals priority over environment variables",
            "begin": "(?i)^\\s*(Format)\\s*(=)",
            "beginCaptures": {
                "1": {"name": "storage.type.option.predefined.rainmeter"},                
                "2": {"name": "keyword.operator.option.equal.rainmeter"}
            },
            "end": "$",
            "patterns": [ 
                {
                    "name": "constant.language.format.rainmeter",
                    "comment": "String format placeholder",
                    "match": "%[0-9]+"
                },
                {
                    "name": "constant.language.format.rainmeter",
                    "comment": "Formatting strings for time formats",
                    "match": "(![0-9]*i!)|(%#?[aAbBcdHIjmMpSUwWxXyYzZ])"
                },
                {
                    "include": "$self"
                }
            ]
        },
        {
            "name": "support.variable.rainmeter",
            "comment": "Rainmeter builtin variables",
            "match": "(?i)(#@#|#PROGRAMDRIVE#)|(#PROGRAMPATH#)|(#SETTINGSPATH#)|(#SKINSPATH#)|(#PLUGINSPATH#)|(#ADDONSPATH#)|(#CURRENTPATH#)|(#ROOTCONFIGPATH#)|(#CURRENTFILE#)|(#CURRENTCONFIG#)|(#CURRENTSECTION#)|(#CURRENTCONFIGWIDTH#)|(#CURRENTCONFIGHEIGHT#)|(#CURRENTCONFIGX#)|(#CURRENTCONFIGY#)|(#[Pp]?WORKAREAX#)|(#[Pp]?WORKAREAY#)|(#[Pp]?WORKAREAWIDTH#)|(#[Pp]?WORKAREAHEIGHT#)|(#[PpVv]?SCREENAREAWIDTH#)|(#[PpVv]?SCREENAREAHEIGHT#)|(#CRLF#)|(#WORKAREAWIDTH#)|(#WORKAREAHEIGHT#)|(#[PpVv]?SCREENAREAX#)|(#[PpVv]?SCREENAREAY#)|(#WORKAREAX@\\d+#)|(#WORKAREAY@\\d+#)|(#WORKAREAWIDTH@\\d+#)|(#WORKAREAHEIGHT@\\d+#)|(#SCREENAREAX@\\d+#)|(#SCREENAREAY@\\d+#)|(#SCREENAREAWIDTH@\\d+#)|(#SCREENAREAHEIGHT@\\d+#)"
        },
        {
            "name": "meta.text.rainmeter",
            "comment": "Escaped variables (must be before normal ones to override them)",
            "match": "#\\*[^#\\s]+?\\*#"
        },
        {
            "name": "variable.other.static.rainmeter",
            "comment": "Normal variables",
            "match": "#[^#\\s]+?#"
        },
        {
            "name": "variable.other.env.rainmeter",
            "comment": "Environment variables",
            "match": "%[A-Za-z][0-9a-zA-Z_]+?%"
        },
        {
            "name": "support.variable.rainmeter",
            "comment": "Mouse position variables",
            "match": "(?i)\\$Mouse(X|Y)(:%)?\\$"
        },
        {
            "name": "support.variable.userinput.rainmeter",
            "comment": "UserInput variable of InputText plugin",
            "match": "(?i)\\$Userinput\\$"
        },
        {
            "name": "invalid.deprecated.bang.rainmeter",
            "comment": "Deprecated bangs",
            "match": "(?i)!((Rainmeter((SetClip)|(SetWallpaper)|(About)|(Manage)|(Log)|(LsBoxHook)|(ResetStats)|(TrayMenu)|(RefreshApp)|(Quit)|(SetOption(Group)?)|(WriteKeyValue)|(SetVariable(Group)?)|(Toggle(Group|Config)?)|(Move(Meter)?)|(DeactivateConfig(Group)?)|(ActivateConfig)|(Refresh(Group)?)|(Update)|(Redraw(Group)?)|(SetTransparency(Group)?)|((Show|Hide|Toggle)Fade(Group)?)|((Show|Hide|Toggle|Add|Remove)Blur)|(Draggable(Group)?)|(ZPos(Group)?)|(KeepOnScreen(Group)?)|(ClickThrough(Group)?)|(SnapEdges(Group)?)|(SkinMenu)|(SkinCustomMenu)|((Show|Hide|Toggle|Update)Meter(Group)?)|(((Dis|En)able|Toggle|Update)Measure(Group)?)|(CommandMeasure)|((Show|Hide)(Group)?)))|Execute|(Rainmeter)?PluginBang)\\b"
        },
        {
            "name": "support.function.bang.rainmeter",
            "comment": "Bangs",
            "match": "(?i)!((SetClip)|(SetWallpaper)|(About)|(Manage)|(Log)|(LsBoxHook)|(ResetStats)|(TrayMenu)|(RefreshApp)|(Quit)|(SetOption(Group)?)|(WriteKeyValue)|(SetVariable(Group)?)|(Toggle(Group|Config)?)|(Move(Meter)?)|(DeactivateConfig(Group)?)|(ActivateConfig)|(Refresh(Group)?)|(Redraw(Group)?)|(SetTransparency(Group)?)|((Show|Hide|Toggle)Fade(Group)?)|((Show|Hide|Toggle|Add|Remove)Blur)|(Draggable(Group)?)|(ZPos(Group)?)|(KeepOnScreen(Group)?)|(ClickThrough(Group)?)|(SnapEdges(Group)?)|(SkinMenu)|(SkinCustomMenu)|((Show|Hide|Toggle|Update)Meter(Group)?)|(((Dis|En)able|Toggle|Update)Measure(Group)?)|(CommandMeasure)|((Un|Toggle)?PauseMeasure)|((Show|Hide)(Group)?|(Update)|(LoadLayout)))\\b"
        },
        {
            "name": "meta.text.rainmeter",
            "comment": "Escaped dynamic sections (must be before normal ones to override them)",
            "match": "\\[\\*[^\\[\\]\\s]+?\\*\\]"
        },
        {
            "name": "variable.other.dynamic.section_variable.rainmeter",
            "comment": "Section variables",
            "match": "(?i)\\[[^\\[\\]\\s\\\\/!#\"%\\$]*?(:((((W|H|X|Y|(Min|Max)Value)|(/[-+]?[0-9]*\\.?[0-9]+(e[-+]?[0-9]+)?(,\\s*[0-9]+)?)|(%)|([0-9]+))(,\\s*((W|H|X|Y|(Min|Max)Value)|(/[-+]?[0-9]*\\.?[0-9]+(e[-+]?[0-9]+)?(,\\s*[0-9]+)?)|(%)|([0-9]+)))*?)|(EscapeRegExp|EncodeURL|TimeStamp))?)\\]",
            "captures": {
                "1": {"name": "constant.language.section_variable.spec.rainmeter"}
            }
        },
        {
            "name": "variable.other.dynamic.rainmeter",
            "comment": "Measures used as dynamic values",
            "match": "\\[[^\\[\\]\\s\\\\/!#\"%\\$]*\\]"
        },
        {
            "name": "meta.option.imageflip.rainmeter",
            "match": "(?i)^\\s*((Primary|Secondary|Both)?imageflip)\\s*(=)\\s*((None|Horizontal|Vertical|Both)|\"(None|Horizontal|Vertical|Both)\")\\s*$",
            "captures": {
                "1": {"name": "storage.type.option.predefined.rainmeter"},
                "3": {"name": "keyword.operator.option.equal.rainmeter"},
                "4": {"name": "support.constant.option_values.rainmeter"}
            }
        },
        {
            "name": "meta.option.imageflip.invalid.rainmeter",
            "match": "(?i)^\\s*((Primary|Secondary|Both)?imageflip)\\s*(=)\\s*(?!(.*#.*#.*$|.*\\[.*\\].*$))(.*)\\s*$",
            "captures": {
                "1": {"name": "storage.type.option.predefined.rainmeter"},
                "3": {"name": "keyword.operator.option.equal.rainmeter"},
                "5": {"name": "invalid.rainmeter"}
            }
        },
        {
            "name": "meta.option.UseExifOrientation.rainmeter",
            "match": "(?i)^\\s*(UseExifOrientation)\\s*(=)\\s*((0|1)|\"(0|1)\")\\s*$",
            "captures": {
                "1": {"name": "storage.type.option.predefined.rainmeter"},
                "2": {"name": "keyword.operator.option.equal.rainmeter"},
                "3": {"name": "support.constant.option_values.rainmeter"}
            }
        },
        {
            "name": "meta.option.UseExifOrientation.invalid.rainmeter",
            "match": "(?i)^\\s*(UseExifOrientation)\\s*(=)\\s*(?!(.*#.*#.*$|.*\\[.*\\].*$))(.*)\\s*$",
            "captures": {
                "1": {"name": "storage.type.option.predefined.rainmeter"},
                "2": {"name": "keyword.operator.option.equal.rainmeter"},
                "4": {"name": "invalid.rainmeter"}
            }
        },
        {
            "name": "meta.option.Paused.rainmeter",
            "match": "(?i)^\\s*(Paused)\\s*(=)\\s*((0|1)|\"(0|1)\")\\s*$",
            "captures": {
                "1": {"name": "storage.type.option.predefined.rainmeter"},
                "2": {"name": "keyword.operator.option.equal.rainmeter"},
                "3": {"name": "support.constant.option_values.rainmeter"}
            }
        },
        {
            "name": "meta.option.Paused.invalid.rainmeter",
            "match": "(?i)^\\s*(Paused)\\s*(=)\\s*(?!(.*#.*#.*$|.*\\[.*\\].*$))(.*)\\s*$",
            "captures": {
                "1": {"name": "storage.type.option.predefined.rainmeter"},
                "2": {"name": "keyword.operator.option.equal.rainmeter"},
                "4": {"name": "invalid.rainmeter"}
            }
        },
        {
            "name": "meta.option.AccurateText.rainmeter",
            "match": "(?i)^\\s*(AccurateText)\\s*(=)\\s*((0|1)|\"(0|1)\")\\s*$",
            "captures": {
                "1": {"name": "storage.type.option.predefined.rainmeter"},
                "2": {"name": "keyword.operator.option.equal.rainmeter"},
                "3": {"name": "support.constant.option_values.rainmeter"}
            }
        },
        {
            "name": "meta.option.AccurateText.invalid.rainmeter",
            "match": "(?i)^\\s*(AccurateText)\\s*(=)\\s*(?!(.*#.*#.*$|.*\\[.*\\].*$))(.*)\\s*$",
            "captures": {
                "1": {"name": "storage.type.option.predefined.rainmeter"},
                "2": {"name": "keyword.operator.option.equal.rainmeter"},
                "4": {"name": "invalid.rainmeter"}
            }
        },{
            "name": "meta.option.UpdateRandom.rainmeter",
            "match": "(?i)^\\s*(UpdateRandom)\\s*(=)\\s*((0|1)|\"(0|1)\")\\s*$",
            "captures": {
                "1": {"name": "storage.type.option.predefined.rainmeter"},
                "2": {"name": "keyword.operator.option.equal.rainmeter"},
                "3": {"name": "support.constant.option_values.rainmeter"}
            }
        },
        {
            "name": "meta.option.UpdateRandom.invalid.rainmeter",
            "match": "(?i)^\\s*(UpdateRandom)\\s*(=)\\s*(?!(.*#.*#.*$|.*\\[.*\\].*$))(.*)\\s*$",
            "captures": {
                "1": {"name": "storage.type.option.predefined.rainmeter"},
                "2": {"name": "keyword.operator.option.equal.rainmeter"},
                "4": {"name": "invalid.rainmeter"}
            }
        },
        {
            "name": "meta.option.UniqueRandom.rainmeter",
            "match": "(?i)^\\s*(UniqueRandom)\\s*(=)\\s*((0|1)|\"(0|1)\")\\s*$",
            "captures": {
                "1": {"name": "storage.type.option.predefined.rainmeter"},
                "2": {"name": "keyword.operator.option.equal.rainmeter"},
                "3": {"name": "support.constant.option_values.rainmeter"}
            }
        },
        {
            "name": "meta.option.UniqueRandom.invalid.rainmeter",
            "match": "(?i)^\\s*(UniqueRandom)\\s*(=)\\s*(?!(.*#.*#.*$|.*\\[.*\\].*$))(.*)\\s*$",
            "captures": {
                "1": {"name": "storage.type.option.predefined.rainmeter"},
                "2": {"name": "keyword.operator.option.equal.rainmeter"},
                "4": {"name": "invalid.rainmeter"}
            }
        },
        {
            "name": "meta.option.IfConditionMode.rainmeter",
            "match": "(?i)^\\s*(IfConditionMode)\\s*(=)\\s*((0|1)|\"(0|1)\")\\s*$",
            "captures": {
                "1": {"name": "storage.type.option.predefined.rainmeter"},
                "2": {"name": "keyword.operator.option.equal.rainmeter"},
                "3": {"name": "support.constant.option_values.rainmeter"}
            }
        },
        {
            "name": "meta.option.IfConditionMode.invalid.rainmeter",
            "match": "(?i)^\\s*(IfConditionMode)\\s*(=)\\s*(?!(.*#.*#.*$|.*\\[.*\\].*$))(.*)\\s*$",
            "captures": {
                "1": {"name": "storage.type.option.predefined.rainmeter"},
                "2": {"name": "keyword.operator.option.equal.rainmeter"},
                "4": {"name": "invalid.rainmeter"}
            }
        },
        {
            "name": "meta.option.IfMatchMode.rainmeter",
            "match": "(?i)^\\s*(IfMatchMode)\\s*(=)\\s*((0|1)|\"(0|1)\")\\s*$",
            "captures": {
                "1": {"name": "storage.type.option.predefined.rainmeter"},
                "2": {"name": "keyword.operator.option.equal.rainmeter"},
                "3": {"name": "support.constant.option_values.rainmeter"}
            }
        },
        {
            "name": "meta.option.IfMatchMode.invalid.rainmeter",
            "match": "(?i)^\\s*(IfMatchMode)\\s*(=)\\s*(?!(.*#.*#.*$|.*\\[.*\\].*$))(.*)\\s*$",
            "captures": {
                "1": {"name": "storage.type.option.predefined.rainmeter"},
                "2": {"name": "keyword.operator.option.equal.rainmeter"},
                "4": {"name": "invalid.rainmeter"}
            }
        },
        {
            "name": "meta.option.measure.rainmeter",
            "match": "(?i)^\\s*(measure)\\s*(=)\\s*((Script|Cpu|Memory|PhysicalMemory|SwapMemory|Uptime|Net(In|Out|Total)|FreeDiskSpace|Loop|Plugin|Registry|Time|Calc|String)|\"(Script|Cpu|Memory|PhysicalMemory|SwapMemory|Uptime|Net(In|Out|Total)|FreeDiskSpace|Loop|Plugin|Registry|Time|Calc|String)\")\\s*$",
            "captures": {
                "1": {"name": "storage.type.option.predefined.rainmeter"},
                "2": {"name": "keyword.operator.option.equal.rainmeter"},
                "3": {"name": "support.constant.names.rainmeter"}
            }
        },
        {
            "name": "meta.option.measure.invalid.rainmeter",
            "match": "(?i)^\\s*(measure)\\s*(=)\\s*(?!(.*#.*#.*$|.*\\[.*\\].*$))(.*)\\s*$",
            "captures": {
                "1": {"name": "storage.type.option.predefined.rainmeter"},
                "2": {"name": "keyword.operator.option.equal.rainmeter"},
                "4": {"name": "invalid.rainmeter"}
            }
        },
        {
            "name": "meta.option.RegHKey.rainmeter",
            "match": "(?i)^\\s*(RegHKey)\\s*(=)\\s*((HKEY_CURRENT_(Config|USER)|HKEY_LOCAL_MACHINE|HKEY_CLASSES_ROOT|HKEY_PERFORMANCE_DATA|HKEY_DYN_DATA)|\"(HKEY_CURRENT_(Config|USER)|HKEY_LOCAL_MACHINE|HKEY_CLASSES_ROOT|HKEY_PERFORMANCE_DATA|HKEY_DYN_DATA)\")\\s*$",
            "captures": {
                "1": {"name": "storage.type.option.predefined.rainmeter"},
                "2": {"name": "keyword.operator.option.equal.rainmeter"},
                "3": {"name": "support.constant.option_values.rainmeter"}
            }
        },
        {
            "name": "meta.option.RegHKey.invalid.rainmeter",
            "match": "(?i)^\\s*(RegHKey)\\s*(=)\\s*(?!(.*#.*#.*$|.*\\[.*\\].*$))(.*)\\s*$",
            "captures": {
                "1": {"name": "storage.type.option.predefined.rainmeter"},
                "2": {"name": "keyword.operator.option.equal.rainmeter"},
                "4": {"name": "invalid.rainmeter"}
            }
        },
        {
            "name": "meta.option.TimeZone.rainmeter",
            "match": "(?i)^\\s*(TimeZone)\\s*(=)\\s*(((local)|(\"local\"))|([-+]?[0-9]*\\.?[0-9]+(e[-+]?[0-9]+)?))\\s*$",
            "captures": {
                "1": {"name": "storage.type.option.predefined.rainmeter"},
                "2": {"name": "keyword.operator.option.equal.rainmeter"},
                "4": {"name": "support.constant.option_values.rainmeter"}
            }
        },
        {
            "name": "meta.option.TimeZone.invalid.rainmeter",
            "match": "(?i)^\\s*(TimeZone)\\s*(=)\\s*(?!(.*#.*#.*$|.*\\[.*\\].*$|\\(.*\\)\\s*$))(.*)\\s*$",
            "captures": {
                "1": {"name": "storage.type.option.predefined.rainmeter"},
                "2": {"name": "keyword.operator.option.equal.rainmeter"},
                "4": {"name": "invalid.rainmeter"}
            }
        },
        {
            "name": "meta.option.meter.rainmeter",
            "match": "(?i)^\\s*(meter)\\s*(=)\\s*((BAR|BITMAP|BUTTON|HISTOGRAM|IMAGE|LINE|ROTATOR|ROUNDLINE|STRING)|\"(BAR|BITMAP|BUTTON|HISTOGRAM|IMAGE|LINE|ROTATOR|ROUNDLINE|STRING)\")\\s*$",
            "captures": {
                "1": {"name": "storage.type.option.predefined.rainmeter"},
                "2": {"name": "keyword.operator.option.equal.rainmeter"},
                "3": {"name": "support.constant.names.rainmeter"}
            }
        },
        {
            "name": "meta.option.meter.invalid.rainmeter",
            "match": "(?i)^\\s*(meter)\\s*(=)\\s*(?!(.*#.*#.*$|.*\\[.*\\].*$))(.*)\\s*$",
            "captures": {
                "1": {"name": "storage.type.option.predefined.rainmeter"},
                "2": {"name": "keyword.operator.option.equal.rainmeter"},
                "4": {"name": "invalid.rainmeter"}
            }
        },
        {
            "name": "meta.option.plugin.rainmeter",
            "match": "(?i)^\\s*(plugin)\\s*(=)\\s*(((Plugins\\\\)?(AdvancedCPU|CoreTemp|FolderInfo|FileView|InputText|iTunesPlugin|MediaKey|NowPlaying|PerfMon|PingPlugin|PowerPlugin|Process|QuotePlugin|RecycleManager|ResMon|SpeedFanPlugin|SysInfo|VirtualDesktops|WebParser|WiFiStatus|AudioLevel|Win7AudioPlugin|WindowMessagePlugin)(\\.dll)?)|\"((Plugins\\\\)?(AdvancedCPU|CoreTemp|FolderInfo|InputText|iTunes|MediaKey|NowPlaying|PerfMon|Ping|Power|Process|Quote|RecycleManager|ResMon|SpeedFan|SysInfo|VirtualDesktops|WebParser|WiFiStatus|Win7Audio|WindowMessage)(\\.dll)?)\")\\s*$",
            "captures": {
                "1": {"name": "storage.type.option.predefined.rainmeter"},
                "2": {"name": "keyword.operator.option.equal.rainmeter"},
                "3": {"name": "support.constant.names.rainmeter"}
            }
        },
        {
            "name": "meta.option.TooltipIcon.rainmeter",
            "match": "(?i)^\\s*(TooltipIcon)\\s*(=)\\s*((INFO|WARNING|ERROR|QUESTION|SHIELD)|\"(INFO|WARNING|ERROR|QUESTION|SHIELD)\")\\s*$",
            "captures": {
                "1": {"name": "storage.type.option.predefined.rainmeter"},
                "2": {"name": "keyword.operator.option.equal.rainmeter"},
                "3": {"name": "support.constant.option_values.rainmeter"}
            }
        },
        {
            "name": "meta.option.TooltipIcon.invalid.rainmeter",
            "match": "(?i)^\\s*(TooltipIcon)\\s*(=)\\s*(?!(.*#.*#.*$|.*\\[.*\\].*$|.*\\.ico\\s*$))(.*)\\s*$",
            "captures": {
                "1": {"name": "storage.type.option.predefined.rainmeter"},
                "2": {"name": "keyword.operator.option.equal.rainmeter"},
                "4": {"name": "invalid.rainmeter"}
            }
        },
        {
            "name": "meta.option.Orientation.rainmeter",
            "match": "(?i)^\\s*((Graph|Bar)Orientation)\\s*(=)\\s*((Horizontal|Vertical)|\"(Horizontal|Vertical)\")\\s*$",
            "captures": {
                "1": {"name": "storage.type.option.predefined.rainmeter"},
                "3": {"name": "keyword.operator.option.equal.rainmeter"},
                "4": {"name": "support.constant.option_values.rainmeter"}
            }
        },
        {
            "name": "meta.option.Orientation.invalid.rainmeter",
            "match": "(?i)^\\s*((Graph|Bar)Orientation)\\s*(=)\\s*(?!(.*#.*#.*$|.*\\[.*\\].*$))(.*)\\s*$",
            "captures": {
                "1": {"name": "storage.type.option.predefined.rainmeter"},
                "3": {"name": "keyword.operator.option.equal.rainmeter"},
                "5": {"name": "invalid.rainmeter"}
            }
        },
        {
            "name": "meta.option.bitmapalign.rainmeter",
            "match": "(?i)^\\s*(bitmapalign)\\s*(=)\\s*((Left|Center|Right)|\"(Left|Center|Right)\")\\s*$",
            "captures": {
                "1": {"name": "storage.type.option.predefined.rainmeter"},
                "2": {"name": "keyword.operator.option.equal.rainmeter"},
                "3": {"name": "support.constant.option_values.rainmeter"}
            }
        },
        {
            "name": "meta.option.bitmapalign.invalid.rainmeter",
            "match": "(?i)^\\s*(bitmapalign)\\s*(=)\\s*(?!(.*#.*#.*$|.*\\[.*\\].*$))(.*)\\s*$",
            "captures": {
                "1": {"name": "storage.type.option.predefined.rainmeter"},
                "2": {"name": "keyword.operator.option.equal.rainmeter"},
                "4": {"name": "invalid.rainmeter"}
            }
        },
        {
            "name": "meta.option.Autoscale.rainmeter",
            "match": "(?i)^\\s*(Autoscale)\\s*(=)\\s*((0|1(k)?|2(k)?)|\"(0|1(k)?|2(k)?)\")\\s*$",
            "captures": {
                "1": {"name": "storage.type.option.predefined.rainmeter"},
                "2": {"name": "keyword.operator.option.equal.rainmeter"},
                "3": {"name": "support.constant.option_values.rainmeter"}
            }
        },
        {
            "name": "meta.option.Autoscale.invalid.rainmeter",
            "match": "(?i)^\\s*(Autoscale)\\s*(=)\\s*(?!(.*#.*#.*$|.*\\[.*\\].*$))(.*)\\s*$",
            "captures": {
                "1": {"name": "storage.type.option.predefined.rainmeter"},
                "2": {"name": "keyword.operator.option.equal.rainmeter"},
                "4": {"name": "invalid.rainmeter"}
            }
        },
        {
            "name": "meta.option.GraphStart.rainmeter",
            "match": "(?i)^\\s*(GraphStart)\\s*(=)\\s*((Left|Right)|\"(Left|Right)\")\\s*$",
            "captures": {
                "1": {"name": "storage.type.option.predefined.rainmeter"},
                "2": {"name": "keyword.operator.option.equal.rainmeter"},
                "3": {"name": "support.constant.option_values.rainmeter"}
            }
        },
        {
            "name": "meta.option.GraphStart.invalid.rainmeter",
            "match": "(?i)^\\s*(GraphStart)\\s*(=)\\s*(?!(.*#.*#.*$|.*\\[.*\\].*$))(.*)\\s*$",
            "captures": {
                "1": {"name": "storage.type.option.predefined.rainmeter"},
                "2": {"name": "keyword.operator.option.equal.rainmeter"},
                "4": {"name": "invalid.rainmeter"}
            }
        },
        {
            "name": "meta.option.align.rainmeter",
            "match": "(?i)^\\s*(stringalign)\\s*(=)\\s*(((Left|Right|Center)(Bottom|Top|Center)?)|\"((Left|Right|Center)(Bottom|Top|Center)?)\")\\s*$",
            "captures": {
                "1": {"name": "storage.type.option.predefined.rainmeter"},
                "2": {"name": "keyword.operator.option.equal.rainmeter"},
                "3": {"name": "support.constant.option_values.rainmeter"}
            }
        },
        {
            "name": "meta.option.align.invalid.rainmeter",
            "match": "(?i)^\\s*(stringalign)\\s*(=)\\s*(?!(.*#.*#.*$|.*\\[.*\\].*$))(.*)\\s*$",
            "captures": {
                "1": {"name": "storage.type.option.predefined.rainmeter"},
                "2": {"name": "keyword.operator.option.equal.rainmeter"},
                "4": {"name": "invalid.rainmeter"}
            }
        },
        {
            "name": "meta.option.stringstyle.rainmeter",
            "match": "(?i)^\\s*(stringstyle)\\s*(=)\\s*((Normal|Bold|Italic|Bolditalic)|\"(Normal|Bold|Italic|Bolditalic)\")\\s*$",
            "captures": {
                "1": {"name": "storage.type.option.predefined.rainmeter"},
                "2": {"name": "keyword.operator.option.equal.rainmeter"},
                "3": {"name": "support.constant.option_values.rainmeter"}
            }
        },
        {
            "name": "meta.option.stringstyle.invalid.rainmeter",
            "match": "(?i)^\\s*(stringstyle)\\s*(=)\\s*(?!(.*#.*#.*$|.*\\[.*\\].*$))(.*)\\s*$",
            "captures": {
                "1": {"name": "storage.type.option.predefined.rainmeter"},
                "2": {"name": "keyword.operator.option.equal.rainmeter"},
                "4": {"name": "invalid.rainmeter"}
            }
        },
        {
            "name": "meta.option.stringeffect.rainmeter",
            "match": "(?i)^\\s*(stringeffect)\\s*(=)\\s*((none|shadow|border)|\"(none|shadow|border)\")\\s*$",
            "captures": {
                "1": {"name": "storage.type.option.predefined.rainmeter"},
                "2": {"name": "keyword.operator.option.equal.rainmeter"},
                "3": {"name": "support.constant.option_values.rainmeter"}
            }
        },
        {
            "name": "meta.option.stringeffect.invalid.rainmeter",
            "match": "(?i)^\\s*(stringeffect)\\s*(=)\\s*(?!(.*#.*#.*$|.*\\[.*\\].*$))(.*)\\s*$",
            "captures": {
                "1": {"name": "storage.type.option.predefined.rainmeter"},
                "2": {"name": "keyword.operator.option.equal.rainmeter"},
                "4": {"name": "invalid.rainmeter"}
            }
        },
        {
            "name": "meta.option.stringcase.rainmeter",
            "match": "(?i)^\\s*(stringcase)\\s*(=)\\s*((none|upper|lower|proper)|\"(none|upper|lower|proper)\")\\s*$",
            "captures": {
                "1": {"name": "storage.type.option.predefined.rainmeter"},
                "2": {"name": "keyword.operator.option.equal.rainmeter"},
                "3": {"name": "support.constant.option_values.rainmeter"}
            }
        },
        {
            "name": "meta.option.stringcase.invalid.rainmeter",
            "match": "(?i)^\\s*(stringcase)\\s*(=)\\s*(?!(.*#.*#.*$|.*\\[.*\\].*$))(.*)\\s*$",
            "captures": {
                "1": {"name": "storage.type.option.predefined.rainmeter"},
                "2": {"name": "keyword.operator.option.equal.rainmeter"},
                "4": {"name": "invalid.rainmeter"}
            }
        },
        {
            "name": "meta.option.predefined.include.rainmeter",
            "comment": "Include statements",
            "match": "(?i)\\s*(@include([^=])*)\\s*(=)",
            "captures": {
                "1": {"name": "storage.type.option.predefined.include.rainmeter"},
                "3": {"name": "keyword.operator.option.equal.rainmeter"}
            }
        },
        {
            "name": "meta.option.predefined.rainmeter",
            "comment": "Predefined options for meters and measures",
            "match": "(?i)^\\s*(Background|BackgroundMode|BackgroundMargins|AccurateText|DefaultUpdateDivider|ImageCrop|Greyscale|Image(Name|Tint|Flip|Rotate|Alpha|Crop)|UseExifOrientation|SolidColor(2)?|GradientAngle|beveltype|Blur|BlurRegion([2-9]{1,1}|[0-9]{2,})?|Update|TransitionUpdate|DynamicWindowSize|Skin(Width|Height)|DragMargins|OnRefreshAction|OnCloseAction|On(Un)?FocusAction|OnChangeAction|OnUpdateAction|OnWakeAction|Author|Description|AppVersion|LocalFont([2-9]{1,1}|[0-9]{2,})?|DynamicVariables|Name|Information|Version|License|Group|Measure|InvertMeasure|Disabled|UpdateDivider|StartValue|EndValue|Increment|LoopCount|(Max|Min)Value|AverageSize|If(Above|Equal|Below)(Value|Action)|IfCondition([2-9]{1,1}|[0-9]{2,})?|If(True|False)Action([2-9]{1,1}|[0-9]{2,})?|IfMatch([2-9]{1,1}|[0-9]{2,})?|If(Not)?MatchAction([2-9]{1,1}|[0-9]{2,})?|Substitute|Formula|UpdateRandom|UniqueRandom|(Low|High)Bound|Processor|Drive|Total|Label|Type|IgnoreRemovable|DiskQuota|Net(In|Out|Total)Speed|Traffic(Action|Value)|Interface|Cumulative|Plugin|Reg(HKey|Key|Value)|ScriptFile|Format|TimeZone|TimeStamp|TimeStampFormat|TimeStampLocale|FormatLocale|DaylightSavingTime|AddDaysToHours|SecondsValue|Meter|X|Y|W|H|MeterStyle|Inline(Pattern|Setting)(.*)?|MeasureName([2-9]{1,1}|[0-9]{2,})?|Hidden|AntiAlias|ToolTip(Text|Title|Icon|Type|Width|Hidden)|TransformationMatrix|Padding|Paused|Bar(Color|Image|Border)|(Primary|Secondary|Both)?ColorMatrix[12345]|BarOrientation|Flip|Bitmap(Image|Frames|TransitionFrames|ZeroFrame|Extend|Digits|Align|Separation)|Button(Image|Command)|SecondaryMeasureName|(Primary|Both|Secondary)(Color|Image(Crop|Tint|Flip|Rotate|Alpha)?|Greyscale)|(Primary|Both|Secondary)?ImagePath|Graph(Start|Orientation)|PreserveAspectRatio|ScaleMargins|Tile|MaskImageName|MaskImagePath|MaskImageFlip|MaskImageRotate|Line(Count|Width|Length|Start)|LineColor([2-9]{1,1}|[0-9]{2,})?|Scale([2-9]{1,1}|[0-9]{2,})?|HorizontalLine(s|Color)|Offset(X|Y)|(Start|Rotation)Angle|ValueRemainder|Control(Length|Start|Angle)|(Length|Start)Shift|Solid|Font(Color|Size|EffectColor|Face)|String(Align|Style|Effect|Case|)?|(Pre|Post)Fix|Autoscale|Percentual|NumOfDecimals|Text|ClipString(W|H)?|Angle|(Left|Right|Middle|(X(1|2)))Mouse(Down|Up|DoubleClick)Action|Mouse(Over|Leave)Action|MouseScroll(Down|Up|Left|Right)Action|MouseActionCursor(Name)?|CPUInclude|CPUExclude|TopProcess|CoreTemp(Type|Index)|Folder|InfoType|RegExpFilter|Include(SubFolders|(Hidden|System)Files)|Command[0-9]*|DefaultValue|Password|FocusDismiss|DefaultArtwork|Player(Name|Type|Path)|TrackChangeAction|DisableLeadingZero|PerfMon(Object|Counter|Instance|Difference)|DestAddress|UpdateRate|Timeout(Value)?|PowerState|ProcessName|PathName|Separator|Subfolders|FileFilter|RecycleType|ResCountType|SpeedFan(Type|Number|Scale)|SysInfo(Type|Data)|VD(Manager|MeasureType|DesktopCount|On((De)?Activate|Change)|Desktop|Width|Height|RefreshOnUpdate)|Desktop(Name|Wallpaper)|Screenshot|Url|RegExp(Substitute)?|FinishAction|OnRegExpErrorAction|OnConnectErrorAction|OnDownloadErrorAction|StringIndex(2)?|DecodeCharacterReference|Debug|Debug2File|Download(File)?|ErrorString|ForceReload|ProxyServer|CodePage|WiFiInfoType|WiFiIntfID|WiFiListStyle|Window(Name|Class|Message)|Context(Title|Action)([2-9]{1,1}|[0-9]{2,})?|Recursive|Count|Show(DotDot|Folder|File|Hidden|System)|(Hide)?Extensions|Sort(Date)?Type|SortAscending|Port|ID|RMSAttack|RMSDecay|RMSGain|PeakAttack|PeakDecay|PeakGain|FFTSize|FFTOverlap|FFTAttack|FFTDecay|Bands|FreqMin|FreqMax|Sensitivity|Parent|Channel|Type|FFTIdx|BandIdx|WildcardSearch|Index|IgnoreCount|DateType|Icon(Path|Size))\\s*(?'equals'=)",
            "captures": {
                "1": {"name": "storage.type.option.predefined.rainmeter"},
                "equals": {
                    "name": "keyword.operator.option.equal.rainmeter"
                }
            }
        },
        {
            "name": "support.constant.rainmeter",
            "comment": "Constants used in Calc measures",
            "match": "(?i)\\b(PI|E|RANDOM)\\b"
        },
        {
            "name": "support.function.math.rainmeter",
            "comment": "Functions used in Calc measures",
            "match": "(?i)\\b(((a)?(tan(2)?|sin|cos))|abs|exp|log|ln|sqrt|sgn|frac|trunc|floor|ceil|min|max|clamp|round|rad)\\s*(?=\\()"
        },
        {
            "name": "meta.option.rainmeter",
            "comment": "All other options in a section",
            "match": "^\\s*([^\\s=]+)\\s*(=)",
            "captures": {
                "1": {"name": "storage.type.option.rainmeter"},
                "2": {"name": "keyword.operator.option.equal.rainmeter"}
            }
        },
        {
            "name": "constant.language.format.rainmeter",
            "comment": "Format placeholder",
            "match": "%[0-9]+"
        },
        {
            "name": "constant.language.format.rainmeter",
            "comment": "Formatting strings for time formats",
            "match": "![0-9]*i!"
        },
        {
            "name": "meta.numeric.color.hex.rainmeter",
            "comment": "Hex color definition",
            "match": "\\b(\\h{2,2})(\\h{2,2})(\\h{2,2})(\\h{2,2})?\\b",
            "captures": {
                "1": {"name": "constant.numeric.color.red.hex.rainmeter"},
                "2": {"name": "constant.numeric.color.green.hex.rainmeter"},
                "3": {"name": "constant.numeric.color.blue.hex.rainmeter"},
                "4": {"name": "constant.numeric.color.alpha.hex.rainmeter"}
            }
        },
        {
            "name": "meta.numeric.color.numeric.rainmeter",
            "comment": "RGB color definition",
            "match": "\\b(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})(\\s*,\\s*(\\d{1,3}))?\\b",
            "captures": {
                "1": {"name": "constant.numeric.color.red.numeric.rainmeter"},
                "2": {"name": "constant.numeric.color.green.numericrainmeter"},
                "3": {"name": "constant.numeric.color.blue.numeric.rainmeter"},
                "5": {"name": "constant.numeric.color.alpha.numeric.rainmeter"}
            }
        }
    ],
    "uuid": "6a53050b-d898-4e20-8fa0-c1726f4ce466"
}
